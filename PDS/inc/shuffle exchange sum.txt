#include<stdio.h>
#include<stdlib.h>
#include"mpi.h"

int shuffle(int a)
{
	int temp=a&(1<<2);
	a=((a<<1)%8) | (temp);
}

int unshuffle(int a)
{
	int temp=a&1;
	a=(a>>1) | (temp<<2);
}

int exchange(int a)
{
	if(a&1)
	{
		return a-1;
	}
	return a+1;
}

int main(int argc,char ** argv)
{
	int my_rank,p,source,dest,tag=0;
	MPI_Status status;
	
	int n=8,local_sum,recv_sum,sum,i,j;
	int num[n]={1,2,3,4,5,6,7,8};
	int a[n],b[n];

	MPI_Init(&argc,&argv);
	MPI_Comm_rank(MPI_COMM_WORLD,&my_rank);
	MPI_Comm_size(MPI_COMM_WORLD,&p);

	a[my_rank]=num[my_rank];


	for(i=0;i<3;i++)
	{
		dest=shuffle(my_rank);
		MPI_Send(&a[my_rank],1,MPI_INT,dest,tag,MPI_COMM_WORLD);

		source=unshuffle(my_rank);
		MPI_Recv(&a[my_rank],1,MPI_INT,source,tag,MPI_COMM_WORLD,&status);
		b[my_rank]=a[my_rank];

		dest=exchange[my_rank];
		MPI_Send(&b[my_rank],1,MPI_INT,dest,tag,MPI_COMM_WORLD);

		source=exchange(my_rank);
		MPI_Recv(&b[my_rank,1,MPI_INT,source,tag,MPI_COMM_WORLD,&status);		
	}

	MPI_Finalize();

	printf("Sum=%d\n",a[0]);
	return 0;
}
